@using LedControleLinuxBlazor.Model
@using LedControleLinuxBlazor.Client.Model
@using Microsoft.AspNetCore.SignalR.Client


<FluentGrid Spacing="4" Justify="JustifyContent.FlexStart" Style="padding: 4px;">
    
    @foreach (var ledGroup in _ledGroups)
    {
        <FluentGridItem xs="12" sm="6" lg="4">
            <LedGroupCard LedGroup="ledGroup" OnActionClick="HandleButtonClicked" />
        </FluentGridItem>
    }
    
</FluentGrid>

@code {
    private List<LedGroup> _ledGroups = new List<LedGroup>();

    private List<LedGroup> LedGroups
    {
        get => _ledGroups;
        set
        {
            if (value != _ledGroups)
            {
                _ledGroups = value;
            }
        }
    }
    private HubConnection privusHubConnection { get; set; }

    [Parameter]
    public HubConnection HubConnection
    {
        get => privusHubConnection;
        set
        {
            if (value != privusHubConnection)
            {
                privusHubConnection = value;
                StateHasChanged();
            }
        }
    }

    private bool init = false;

    protected override async Task OnParametersSetAsync()
    {
        if (HubConnection != null)
        {
            if (!HubConnection.Equals(privusHubConnection) || !init)
            {
                init = true;
                HubConnection.On<List<LedGroup>>("GetGroups", (ledGroups) =>
                {
                    LedGroups = ledGroups;
                });
                await HubConnection.InvokeAsync("SendLedGroups");
            }
            
        }
    }

    private async Task HandleButtonClicked(LedGroupBundle action)
    {
        if (HubConnection != null)
        {
            await HubConnection.InvokeAsync("SettLedSates", action.LedGroup, action.LedState);
        }
        
    }
    

   


}

